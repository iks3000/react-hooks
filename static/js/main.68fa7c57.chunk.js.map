{"version":3,"sources":["components/header-nav.js","components/code.js","components/starwars-planets.js","components/hook-rules.js","components/use-context.js","components/use-effect-exercises.js","components/use-effect.js","components/use-state.js","components/app.js","index.js"],"names":["HeaderNav","className","to","codeStringUseState","codeStringStarWarsPlanet","spinner","role","getPlanet","id","a","fetch","res","json","data","usePlanetInfo","request","initialState","useMemo","loading","error","useState","dataState","setDataState","useEffect","cancelled","then","catch","useRequest","useCallback","PlanetInfo","name","AppStarWarsPlanets","value","setValue","visible","setVisible","buttomVisible","onClick","v","buttomHide","style","width","height","docco","HookRules","setName","age","setAge","rate","setRate","type","onChange","event","target","MyContext","React","createContext","Child","useContext","AppUseContext","Provider","HookCounter","console","log","Notification","counter","setCounter","timeout","setInterval","clearTimeout","UseEffectExrcise","ClassCounter","this","props","Component","AppUseEffect","HookSwitcher","color","setColor","fontSize","setFontSize","s","AppUseState","App","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68fa7c57.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst HeaderNav = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/react-hooks\">Hooks |</Link>\n      <ul className=\"navbar-nav mr-auto\">\n        <NavLink className=\"nav-link\" to=\"/react-hooks/hook-rules\">Hooks Rules</NavLink>\n        <NavLink className=\"nav-link\" to=\"/react-hooks/use-state\">useState</NavLink>\n        <NavLink className=\"nav-link\" to=\"/react-hooks/use-effect\">useEffect</NavLink>\n        <NavLink className=\"nav-link\" to=\"/react-hooks/use-context\">useContext</NavLink>\n        <NavLink className=\"nav-link\" to=\"/react-hooks/use-effect-exercises\">useEffect Exercises</NavLink>\n        <NavLink className=\"nav-link\" to=\"/react-hooks/star-wars-planets\">StarWars Planets</NavLink>\n      </ul>\n    </nav>\n  )\n}\n\nexport default HeaderNav;\n","/* eslint-disable no-template-curly-in-string */\n\nconst fontSize = '${fontSize}';\n\nexport const codeStringUseState = `\n  import React, { useState } from 'react';\n\n  const HookSwitcher = () => {\n    const [color, setColor] = useState('bg-dark text-white');\n    const [ fontSize, setFontSize ] = useState(14)\n\n    return (\n      <div className={color} >\n        <div>\n          <button className={color}\n            onClick={() => setColor('bg-dark text-white')}\n            >Dark\n          </button>\n          <button onClick={() => setColor('bg-white')}>Light</button>\n          <button onClick={() => setFontSize((s) => s - 2)}>-</button>\n          <button onClick={() => setFontSize((s) => s + 2)}>+</button>\n        </div>\n        <p style={{fontSize: \\`${fontSize}px\\`}}>\n          Hello World\n        </p>\n      </div>\n    )\n  }\n`;\n\nexport const codeStringHookRules = `\n  import React, { useState } from 'react';\n\n  const [name, setName] = useState(\"Jon\");\n  const onChangeName = (event) => setName(event.target.value);\n\n  <div>\n    <input type=\"text\" value={name} onChange={onChangeName} />\n    My name is {name}\n  </div>\n  `;\n\nexport const codeStringUseContext = `\n  import React, { useContext } from 'react';\n\n  const MyContext = React.createContext();\n\n  const AppUseContext = () => {\n    return (\n      <MyContext.Provider value=\"Hello World 123\">\n        <Child />\n      </MyContext.Provider>\n    )\n  };\n\n  const Child = () => {\n    const value = useContext(MyContext)\n    return <p>{value}</p>\n  }\n`;\n\nexport const codeStringUseEffectExercises = `\n  import React, { useState, useEffect } from 'react';\n\n  const UseEffectExrcise = () => {\n    const [value, setValue] = useState(0);\n    const [visible, setVisible] = useState(true);\n\n    if (visible) {\n      return (\n        <div>\n          <button onClick={() => setValue((v) => v + 1)}>+</button>\n          <button onClick={() => setVisible(false)}>Hide</button>\n          <HookCounter value={value} />\n          <Notification />\n        </div>\n      )\n    } else {\n      return <button onClick={() => setVisible(true)}>Show</button>\n    }\n  };\n\n  const HookCounter = ({ value }) => <p>{value}</p>;\n\n  const Notification = () => {\n    const [visible, setVisible] = useState(true);\n    const [counter, setCounter] = useState(5)\n\n    useEffect(() => {\n      const timeout = counter > 0 ?\n        setInterval(() => setCounter(counter - 1), 1000) :\n        setVisible(false);\n      return () => clearTimeout(timeout);\n    }, [visible, counter])\n    return (\n      <div className=\"text-center\">\n        {visible && <p>I'll hide in {counter} seconds</p>}\n      </div>\n    )\n  }\n`;\n\nexport const codeStringUseEffect = `\n  import React, { Component, useState, useEffect } from 'react';\n\n  const AppUseEffect = () => {\n    const [value, setValue] = useState(0);\n    const [visible, setVisible] = useState(true);\n\n    if (visible) {\n      return (\n        <div>\n          <button onClick={() => setValue((v) => v + 1)}>+</button>\n          <button onClick={() => setVisible(false)}>hide</button>\n          <ClassCounter value={value} />\n          <HookCounter value={value} />\n        </div>\n      )\n    } else {\n      return <button onClick={() => setVisible(true)}>show</button>\n    }\n  };\n\n  const HookCounter = ({ value }) => {\n    useEffect(() => {\n      console.log('useEffect()');\n      return () => console.log('clear')\n    }, [value])\n    return <p>{value}</p>\n  }\n\n  class ClassCounter extends Component {\n    componentDidMount() {\n      console.log('class: mount');\n    }\n\n    componentDidUpdate() {\n      console.log('class: update');\n    }\n\n    componentWillUnmount() {\n      console.log('class: unmount');\n    }\n\n    render() {\n      return <p>{this.props.value}</p>\n    }\n  }\n`;\n\nconst link = 'https://swapi.dev/api/planets/${ id }';\nexport const codeStringStarWarsPlanet = `\n  import React, { useState, useEffect, useCallback, useMemo } from 'react';\n\n  const AppStarWarsPlanets = () => {\n    const [value, setValue] = useState(1);\n    const [visible, setVisible] = useState(true);\n\n    if (visible) {\n      return (\n        <div>\n          <button onClick={() => setValue((v) => v + 1)}>+</button>\n          <button onClick={() => setVisible(false)}>hide</button>\n          <PlanetInfo id={value} />\n        </div>\n      )\n    } else {\n      return <button onClick={() => setVisible(true)}>show</button>\n    }\n  };\n\n  const spinner = (\n    <div className=\"spinner-border spinner-border-sm\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  )\n\n  const getPlanet = (id) => {\n    return fetch(\\`${link}\\`)\n      .then(res => res.json())\n      .then(data => data);\n  }\n\n  const useRequest = (request) => {\n    const initialState = useMemo(() => ({\n      data: null,\n      loading: true,\n      error: null\n    }), []);\n\n    const [dataState, setDataState] = useState(initialState)\n\n    useEffect(() => {\n      setDataState(initialState);\n\n      let cancelled = false;\n      request()\n        .then(data => !cancelled && setDataState({\n          data,\n          loading: false,\n          error: null\n        }))\n        .catch(error => !cancelled && setDataState({\n          data: null,\n          loading: false,\n          error\n        }));\n      return () => cancelled = true;\n    }, [request, initialState]);\n\n    return dataState;\n  }\n\n  const usePlanetInfo = (id) => {\n    const req = useCallback(() => getPlanet(id), [id]);\n    return useRequest(req);\n  }\n\n  const PlanetInfo = ({ id }) => {\n    const { data, loading, error } = usePlanetInfo(id);\n\n    if (error) {\n      return <div className=\"mt-3\">Somthing is wrong</div>\n    }\n\n    if (loading) {\n      return <div className=\"mt-3\">{spinner}</div>\n    }\n\n    return (\n      <div className=\"text-center mt-3\">{id} - {data.name}</div>\n    )\n  }\n`;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringStarWarsPlanet } from './code';\n\nconst AppStarWarsPlanets = () => {\n  const [value, setValue] = useState(1);\n  const [visible, setVisible] = useState(true);\n\n  const buttomVisible = (\n    <>\n      <div className=\"d-flex justify-content-center mr-auto\">\n        <button className=\"btn btn-primary btn-sm shadow-none mr-3\" onClick={() => setValue((v) => v + 1)}>Next</button>\n        <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(false)}>Hide</button>\n      </div>\n      <PlanetInfo id={value} />\n    </>\n  );\n\n  const buttomHide = (\n    <div className=\"d-flex justify-content-center\">\n      <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(true)}>Show</button>\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className=\"card d-inline-flex\" style={{ width: \"17rem\" }}>\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card text-white bg-dark d-inline-flex\" style={{ height: \"10rem\", width: \"15rem\" }}>\n                <div className=\"card-header\">StarWars Planets</div>\n                <div className=\"card-body\">\n                  {visible ? buttomVisible : buttomHide}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"43rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringStarWarsPlanet}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nconst spinner = (\n  <div className=\"d-flex justify-content-center\">\n    <div className=\"spinner-border spinner-border-sm text-success\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  </div>\n)\n\nconst getPlanet = async (id) => {\n  const res = await fetch(`https://swapi.dev/api/planets/${ id }/`);\n  const data = await res.json();\n  return data;\n}\n\nconst useRequest = (request) => {\n  const initialState = useMemo(() => ({\n    data: null,\n    loading: true,\n    error: null\n  }), []);\n\n  const [dataState, setDataState] = useState(initialState)\n\n  useEffect(() => {\n    setDataState(initialState);\n\n    let cancelled = false;\n    request()\n      .then(data => !cancelled && setDataState({\n        data,\n        loading: false,\n        error: null\n      }))\n      .catch(error => !cancelled && setDataState({\n        data: null,\n        loading: false,\n        error\n      }));\n    return () => cancelled = true;\n  }, [request, initialState]);\n\n  return dataState;\n}\n\nconst usePlanetInfo = (id) => {\n  const req = useCallback(() => getPlanet(id), [id]);\n  return useRequest(req);\n}\n\nconst PlanetInfo = ({ id }) => {\n  const { data, loading, error } = usePlanetInfo(id);\n\n  if (error) {\n    return <div className=\"mt-3\">Something is wrong</div>\n  }\n\n  if (loading) {\n    return <div className=\"mt-3\">{spinner}</div>\n  }\n\n  return (\n    <div className=\"text-center mt-3\">{id} - {data.name}</div>\n  )\n}\n\nexport default AppStarWarsPlanets;\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringHookRules } from './code';\n\nconst HookRules = () => {\n  const [name, setName] = useState(\"Jon\");\n  const [age, setAge] = useState(24);\n  const [rate, setRate] = useState(25);\n\n  const onChangeName = (event) => setName(event.target.value);\n  const onChangeAge = (event) => setAge(event.target.value);\n  const onChangeRate = (event) => setRate(event.target.value);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{width: \"25rem\"}}>\n          <div className=\"card-header\">Правила и ограничения хуков:</div>\n          <div className=\"card-body\">\n            <ul className=\"card-text pl-3\">\n              <li>Хуки нельзя использовать в циклах и условиях</li>\n              <li>Хуки можно использовать только в React компонентах т в других хуках</li>\n              <li>Хуки нельзя использовать в классах</li>\n              <li>Не все возможности React можно реализоватьпри помощи хуков (например,\n              componentDidCatch() работает только в классах)</li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"37rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringHookRules}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"form-inline d-flex justify-content-around w-75 m-auto\">\n        <div>\n          Name: <input type=\"text\" className=\"form-control\" value={name} onChange={onChangeName} />\n        </div>\n        <div>\n          Age: <input type=\"number\" className=\"form-control\" value={age} onChange={onChangeAge } />\n        </div>\n        <div>\n          Rate: <input type=\"number\" className=\"form-control\" value={rate} onChange={onChangeRate} />\n        </div>\n      </div>\n\n      <h3 className=\"text-center mt-3\">\n        {name} is {age} year old his rate is ${rate} per hour\n      </h3>\n    </>\n  )\n}\n\nexport default HookRules;\n","import React, { useContext } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringUseContext } from './code';\n\nconst MyContext = React.createContext();\n\nconst AppUseContext = () => {\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"25rem\" }}>\n          <div className=\"card-body d-flex justify-content-center align-items-center\">\n            <MyContext.Provider value=\"Hello World 123\">\n              <Child />\n            </MyContext.Provider>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"37rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringUseContext}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nconst Child = () => {\n  const value = useContext(MyContext)\n  return <p>{value}</p>\n}\n\nexport default AppUseContext;\n","import React, { useState, useEffect } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringUseEffectExercises } from './code';\n\nconst UseEffectExrcise = () => {\n  const [value, setValue] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  const buttomVisible = (\n    <>\n      <div className=\"d-flex justify-content-center mr-auto\">\n        <button className=\"btn btn-primary btn-sm shadow-none mr-3\" onClick={() => setValue((v) => v + 1)}>+</button>\n        <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(false)}>Hide</button>\n      </div>\n      <HookCounter value={value} />\n      <Notification/>\n    </>\n  );\n\n  const buttomHide = (\n    <div className=\"d-flex justify-content-center\">\n      <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(true)}>Show</button>\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className=\"card d-inline-flex\" style={{ width: \"20rem\" }}>\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card text-white bg-dark d-inline-flex\" style={{ height: \"15rem\", width: \"15rem\" }}>\n                <div className=\"card-header\">useEffect Exercise</div>\n                <div className=\"card-body\">\n                  {visible ? buttomVisible : buttomHide}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"40rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringUseEffectExercises}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nconst HookCounter = ({ value }) => {\n\n  useEffect(() => console.log('mount'), []);\n  useEffect(() => console.log('update'));\n  useEffect(() => () => console.log('unmount'), []);\n\n// ========= (mount + unmount) ==============\n  useEffect(() => {\n    console.log('mount');\n    return () => console.log('unmount');\n  }, []);\n// ==========================================\n\n  return <h3 className=\"text-center pt-3\">{value}</h3>\n}\n\nconst Notification = () => {\n  const [visible, setVisible] = useState(true);\n  const [counter, setCounter] = useState(5)\n\n  // ===== effect + cleanup (mount + unmount)\n  useEffect(() => {\n    const timeout = counter > 0 ?\n      setInterval(() => setCounter(counter - 1), 1000) :\n      setVisible(false);\n\n    return () => clearTimeout(timeout);\n  }, [visible, counter])\n  return (\n    <div className=\"text-center\">\n      {visible && <p>I'll hide in {counter} seconds</p>}\n    </div>\n  )\n};\n\n/*\nconst Notification = () => {\n  const [visible, setVisible] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => setVisible(false), 3000);\n    return () => clearTimeout(timeout);\n  }, [])\n  return (\n    <div className=\"text-center\">\n      {visible && <p>I'll hide in 3 seconds</p>}\n    </div>\n  )\n}\n*/\n\nexport default UseEffectExrcise;\n","import React, { Component, useState, useEffect } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringUseEffect } from './code';\n\nconst AppUseEffect = () => {\n  const [value, setValue] = useState(0);\n  const [visible, setVisible] = useState(true);\n\n  const buttomVisible = (\n    <>\n      <div className=\"d-flex justify-content-center mr-auto\">\n        <button className=\"btn btn-primary btn-sm shadow-none mr-3\" onClick={() => setValue((v) => v + 1)}>+</button>\n        <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(false)}>Hide</button>\n      </div>\n      <div className=\"mt-3\">\n        ClassCounter: <ClassCounter value={value} /><br/>\n        HookCounter: <HookCounter value={value} />\n      </div>\n    </>\n  );\n\n  const buttomHide = (\n    <div className=\"d-flex justify-content-center\">\n      <button className=\"btn btn-primary btn-sm shadow-none\" onClick={() => setVisible(true)}>Show</button>\n    </div>\n  )\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className=\"card d-inline-flex\" style={{ width: \"22rem\" }}>\n          <div className=\"card-body\">\n            <div className=\"d-flex justify-content-center\">\n              <div className=\"card text-white bg-dark d-inline-flex\" style={{ height: \"15rem\"}}>\n                <div className=\"card-header\">useEffect</div>\n                <div className=\"card-body d-flex flex-column justify-content-between\">\n                  <div>{visible ? buttomVisible : buttomHide}</div>\n                  <h4 className=\"text-warning\">Look at the console!</h4>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"40rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringUseEffect}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n};\n\nconst HookCounter = ({ value }) => {\n  useEffect(() => {\n    console.log('useEffect()');\n    return () => console.log('clear')\n  }, [value])\n  return <span>{value}</span>\n}\n\nclass ClassCounter extends Component {\n  componentDidMount() {\n    console.log('class: mount');\n  }\n\n  componentDidUpdate() {\n    console.log('class: update');\n  }\n\n  componentWillUnmount() {\n    console.log('class: unmount');\n  }\n\n  render() {\n    return <span>{this.props.value}</span>\n  }\n}\n\nexport default AppUseEffect;\n","import React, { useState } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { codeStringUseState } from './code';\n\nconst AppUseState = () => {\n  return  <HookSwitcher />\n};\n\nconst HookSwitcher = () => {\n  const [color, setColor] = useState('card text-white bg-dark d-inline-flex');\n  const [fontSize, setFontSize] = useState(14);\n\n  return (\n    <>\n      <div className=\"d-flex justify-content-between mb-4\">\n        <div className={color} style={{ width: \"20rem\" }}>\n          <div className=\"card-body\">\n            <button className=\"btn btn-primary shadow-none mr-2\" onClick={() => setColor('text-white bg-dark')}>Dark</button>\n            <button className=\"btn btn-primary shadow-none mr-2\" onClick={() => setColor('text-dark bg-white')}>Light</button>\n            <button className=\"btn btn-primary shadow-none mr-2\" onClick={() => setFontSize((s) => s - 2)}>-</button>\n            <button className=\"btn btn-primary shadow-none\" onClick={() => setFontSize((s) => s + 2)}>+</button>\n            <p className=\"mt-2\" style={{ fontSize: `${ fontSize }px` }}>\n              Hello World\n            </p>\n          </div>\n        </div>\n\n        <div className=\"card text-white bg-dark d-inline-flex\" style={{ width: \"42rem\" }}>\n          <div className=\"card-header\">Code:</div>\n          <div className=\"card-body\">\n            <SyntaxHighlighter style={docco}>\n              {codeStringUseState}\n            </SyntaxHighlighter>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default AppUseState;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport HeaderNav from './header-nav';\nimport AppStarWarsPlanets from './starwars-planets';\nimport HookRules from './hook-rules';\nimport AppUseContext from './use-context';\nimport UseEffectExrcise from './use-effect-exercises';\nimport AppUseEffect from './use-effect';\nimport AppUseState from './use-state';\n\nconst App = () => {\n  return (\n    <Router>\n      <HeaderNav />\n      <div className=\"jumbotron m-0 p-5\">\n        <Switch>\n          <Route exact\n            path=\"/react-hooks\"\n            render={() => (\n              <div className=\"jumbotron\">\n                <h1 className=\"text-center text-success\">How to use Hooks!</h1>\n              </div>)\n            }\n          />\n\n          <Route path=\"/react-hooks/hook-rules\" component={HookRules} />\n          <Route path=\"/react-hooks/use-state\" component={AppUseState} />\n          <Route path=\"/react-hooks/use-effect\" component={AppUseEffect} />\n          <Route path=\"/react-hooks/use-context\" component={AppUseContext} />\n          <Route path=\"/react-hooks/use-effect-exercises\" component={UseEffectExrcise} />\n          <Route path=\"/react-hooks/star-wars-planets\" component={AppStarWarsPlanets} />\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}